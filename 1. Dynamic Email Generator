{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<hr style=\"height:1px;border:none;color:#333;background-color:#333;\" />\n",
    "<hr style=\"height:1px;border:none;color:#333;background-color:#333;\" />\n",
    "<br><br><br>\n",
    "\n",
    "<h1> Dynamic Email Generator </h1><br>\n",
    "Data Science: Python<br>\n",
    "Ã‰milie Lopez<br>\n",
    "Hult International Business School <br>\n",
    "<br><br><br><br><br>\n",
    "\n",
    "<hr style=\"height:1px;border:none;color:#333;background-color:#333;\" />\n",
    "<hr style=\"height:1px;border:none;color:#333;background-color:#333;\" />\n",
    "<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Importing packages\n",
    "import pandas as pd\n",
    "import random as rand"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Staff information for email signature\n",
    "staff_name    = \"Emilie Lopez\"\n",
    "staff_title   = \"Customer Relationship Manager\"\n",
    "staff_company = \"DAT-5301 DATA SCIENCE: PYTHON\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Data\n",
    "\n",
    "# Customer info (first name, recommended product category, hook tag)\n",
    "customer_info = [  ['mary', 'dining room tables', 'financing'],\n",
    "                   ['patrick', 'area rugs', 'return policy'],\n",
    "                   ['gonzalo', 'dining room tables', 'return policy'],\n",
    "                   ['UNKNOWN', 'coffee tables', 'in-home assembly'],\n",
    "                   ['richard', 'sofas', 'free shipping'],\n",
    "                   ['UNKNOWN', 'dining room tables', 'in-home assembly'],\n",
    "                   ['tim', 'sofas', 'return policy'],\n",
    "                   ['keenan', 'area rugs', 'financing'],\n",
    "                   ['UNKNOWN', 'area rugs', 'financing'],\n",
    "                   ['dana', 'bookcases', 'customization'],\n",
    "                   ['lauren', 'bookcases', 'customization'],\n",
    "                   ['karen', 'sofas', 'in-home assembly'],  ]\n",
    "\n",
    "\n",
    "# Approved email subject lines\n",
    "subject_lines    = [  \"people will compliment\",                 \n",
    "                      \"on our site are just WOW!\",              \n",
    "                      \"you *gotta* see.\",                       \n",
    "                      \"handpicked for you!\",                    \n",
    "                      \"- Just for you, we rounded up our best\", \n",
    "                      \"we can barely keep in stock\",            \n",
    "                      \"we found for you.\",                      \n",
    "                      \"at a great price.\",                      \n",
    "                      \"we think you will love\",  ]\n",
    "\n",
    "\n",
    "# Approved hooks\n",
    "hooks = [  \"FREE Shipping\",\n",
    "           \"Financing at 0% Interest\",\n",
    "           \"In-Home Assembly for just $10\",\n",
    "           \"A 30 Day Return Policy with No Strings Attached\",\n",
    "           \"Discounted Pricing on Tailoring and Customizations\",  ]\n",
    "\n",
    "\n",
    "\n",
    "# Approved openings\n",
    "openings = [  f\"We noticed your interest in our \",\n",
    "              f\"I'm glad you were checking out our \",\n",
    "              f\"You have excellent taste in \",  ]\n",
    "\n",
    "\n",
    "# Approved promotions\n",
    "promotions = [\n",
    "    f\"Order within the next 24 hours and get \",\n",
    "    f\"Order one today and get \",\n",
    "    f\"Your order qualifies for \",  ]\n",
    "\n",
    "\n",
    "# Approved promotion code\n",
    "promotion_code = \"!\\nJust use the promotion code PYTHON!\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Defining the function hook </h3>\n",
    "\n",
    "This function recognizes the hook tag from customer_info and returns the corresponding hook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating the function hook with def()\n",
    "def hook():\n",
    "    if customer_info[i][2] == 'financing':            # If hook tag is 'financing',\n",
    "        return(hooks[1])                              # write \"Financing at 0% Interest\".\n",
    "    \n",
    "    elif customer_info[i][2] == 'return policy':      # If hook tag is 'return policy',\n",
    "        return(hooks[3])                              # write \"A 30 Day Return Policy with No Strings Attached\".\n",
    "    \n",
    "    elif customer_info[i][2]== 'in-home assembly':    # If hook tag is \"in-home assembly\",\n",
    "        return(hooks[2])                              # write \"In-Home Assembly for jsut $10\".\n",
    "    \n",
    "    elif customer_info[i][2] == 'free shipping':      # If hook tag is \"free shipping\",\n",
    "        return(hooks[0])                              # write\"FREE Shipping\".\n",
    "    \n",
    "    elif customer_info[i][2] == 'customization':      # If hook tag is 'customization',\n",
    "        return(hooks[4])                              # write\"Discounted Pricing on Tailoring and Customizations\".\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Defining the function dynamic_email </h3>\n",
    "\n",
    "This function generates a personnalized email for every customer in the database. \n",
    "The emails are personnalized with a category of product and a hook tailored for the customer. Subject lines, opening and promotions are random."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating the function dynamic_email with def\n",
    "def dynamic_email():   \n",
    "    \n",
    "    # Creating a line before subject line\n",
    "    print('-' * 40)     \n",
    "    \n",
    "    # Printing a random subject line with the personalized product category\n",
    "    print(f\"{customer_info[i][1].title()} {rand.choice(subject_lines).title()}\")\n",
    "    \n",
    "    # Creating a line after subject line\n",
    "    print('-' * 40)\n",
    "         \n",
    "    # Printing the email body with the customer first name with a capital letter, \n",
    "    # a random opening, the customer product category, a random promotion, \n",
    "    # the personalized hook defined by the function hook earlier and a promotion\n",
    "    #  code. The email is signed with my first name and last name, my title and company.\n",
    "    print(f\"\"\"\n",
    "Greetings {customer_info[i][0].capitalize()}!\n",
    "    \n",
    "\n",
    "{rand.choice(openings)}{customer_info[i][1].title()}.\n",
    "    \n",
    "{rand.choice(promotions)}{hook()}{promotion_code}\n",
    "\n",
    "                 ____                        \n",
    "                /    \\                       \n",
    "               /______\\                      \n",
    "                  ||                           \n",
    "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
    "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
    " (_)========(_)   ||  (_)==== ===========(_) \n",
    "  I|_________|I  _||_  |___________________| \n",
    "\n",
    "\n",
    "Best,\n",
    "{staff_name}\n",
    "{staff_title}\n",
    "{staff_company}\n",
    "\"\"\")\n",
    "\n",
    "    # Creating a line after email body\n",
    "    print('-' * 40)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3> Using the function for every customer </h3>\n",
    "\n",
    "A loop is created to generate a personalized email for each customer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----------------------------------------\n",
      "Dining Room Tables We Can Barely Keep In Stock\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Mary!\n",
      "    \n",
      "\n",
      "You have excellent taste in Dining Room Tables.\n",
      "    \n",
      "Order one today and get Financing at 0% Interest!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Area Rugs On Our Site Are Just Wow!\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Patrick!\n",
      "    \n",
      "\n",
      "I'm glad you were checking out our Area Rugs.\n",
      "    \n",
      "Your order qualifies for A 30 Day Return Policy with No Strings Attached!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Dining Room Tables We Think You Will Love\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Gonzalo!\n",
      "    \n",
      "\n",
      "I'm glad you were checking out our Dining Room Tables.\n",
      "    \n",
      "Order one today and get A 30 Day Return Policy with No Strings Attached!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Coffee Tables You *Gotta* See.\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Customer!\n",
      "    \n",
      "\n",
      "You have excellent taste in Coffee Tables.\n",
      "    \n",
      "Your order qualifies for In-Home Assembly for just $10!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Sofas We Can Barely Keep In Stock\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Richard!\n",
      "    \n",
      "\n",
      "We noticed your interest in our Sofas.\n",
      "    \n",
      "Order within the next 24 hours and get FREE Shipping!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Dining Room Tables We Can Barely Keep In Stock\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Customer!\n",
      "    \n",
      "\n",
      "We noticed your interest in our Dining Room Tables.\n",
      "    \n",
      "Your order qualifies for In-Home Assembly for just $10!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Sofas People Will Compliment\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Tim!\n",
      "    \n",
      "\n",
      "We noticed your interest in our Sofas.\n",
      "    \n",
      "Order one today and get A 30 Day Return Policy with No Strings Attached!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Area Rugs You *Gotta* See.\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Keenan!\n",
      "    \n",
      "\n",
      "You have excellent taste in Area Rugs.\n",
      "    \n",
      "Order one today and get Financing at 0% Interest!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Area Rugs On Our Site Are Just Wow!\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Customer!\n",
      "    \n",
      "\n",
      "I'm glad you were checking out our Area Rugs.\n",
      "    \n",
      "Order one today and get Financing at 0% Interest!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Bookcases You *Gotta* See.\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Dana!\n",
      "    \n",
      "\n",
      "We noticed your interest in our Bookcases.\n",
      "    \n",
      "Order within the next 24 hours and get Discounted Pricing on Tailoring and Customizations!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Bookcases You *Gotta* See.\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Lauren!\n",
      "    \n",
      "\n",
      "I'm glad you were checking out our Bookcases.\n",
      "    \n",
      "Your order qualifies for Discounted Pricing on Tailoring and Customizations!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n",
      "----------------------------------------\n",
      "Sofas On Our Site Are Just Wow!\n",
      "----------------------------------------\n",
      "\n",
      "Greetings Karen!\n",
      "    \n",
      "\n",
      "You have excellent taste in Sofas.\n",
      "    \n",
      "Order one today and get In-Home Assembly for just $10!\n",
      "Just use the promotion code PYTHON!\n",
      "\n",
      "                 ____                        \n",
      "                /    \\                       \n",
      "               /______\\                      \n",
      "                  ||                           \n",
      "   /~~~~~~~~\\     ||    /~~~~~~~~~~~~~~~~\\   \n",
      "  /~ () ()  ~\\    ||   /~ ()  ()  () ()  ~\\  \n",
      " (_)========(_)   ||  (_)==== ===========(_) \n",
      "  I|_________|I  _||_  |___________________| \n",
      "\n",
      "\n",
      "Best,\n",
      "Emilie Lopez\n",
      "Customer Relationship Manager\n",
      "DAT-5301 DATA SCIENCE: PYTHON\n",
      "\n",
      "----------------------------------------\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Creating a customer variable with a list of number from 0 to 11 representing \n",
    "# the customers by their index in customer_info\n",
    "customer = [0,1,2,3,4,5,6,7,8,9,10,11]\n",
    "\n",
    "# Creating a loop to generate an email for each customer\n",
    "for i in customer:                                                               # For each customer \n",
    "   \n",
    "    if customer_info[i][0] == 'UNKNOWN':                                         # If the first name is unknown,\n",
    "        customer_info[i][0] = customer_info[i][0].replace('UNKNOWN','customer')  # replace it by customer\n",
    "        dynamic_email()                                                          # print the personalized email\n",
    "        print('\\n')                                                              # add some space before next email\n",
    "    \n",
    "    else:                                                                        # If the first name is known,\n",
    "        dynamic_email()                                                          # print the personalized\n",
    "        print('\\n')                                                              # add some space before next email\n",
    "      "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "position": {
    "height": "293px",
    "left": "1062px",
    "right": "20px",
    "top": "120px",
    "width": "358px"
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
